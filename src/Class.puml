@startuml
package Model{
abstract carta{
-Nombre: string
-Texto: String
+carta(nombre: String, texto: String)
+{abstract}BuscarCarta(nombre: String)
+{abstract}BuscarCarta((nombre: String, tipo: String, texto: String)
+get's() & sets()

}
class land extends carta{
-Color: String
+lands(nombre: String,, texto: String, Color: String)
+get's() & sets()
}

class Nonland extends carta{
-Power: int
-toughness: int
-CMC: int
-ManaCost: String[]
-tipo: String
+lands(nombre: String, tipo: String, texto: String, power: int, toughness: int, CMC: int ManaCost String[],tipo String)
+get's() & sets()
}

class Mazo{
-maindeck: carta[]
-sidedeck: carta[]
-cantidadMaxima: int
-cantidadActual: int
+ListaCartas(CantidadMaximaInt)
+AgregarCarta(nombre: String):boolean
+modificarSideDeck():void
+modificarMainDeck():void
+AgregarCarta(Carta: carta,Cantidad: int):boolean
+EliminarCarta(Carta: carta,Cantidad: int):boolean
+VerificarCantidad():void
+get's() & sets()
}

class listaMazos{
-Nombre: String
-mazos Mazos[]
-cantidadMaxima: int
-cantidadActual: int
+listaMazos(CantidadMaximaInt, nombre: String))
+AgregarMazo(cantidadDeCartas:int):boolean
+EliminarMazo(posicionDeMazo: int)):boolean

}

}
package utils{
class instalador{
    - sistemaCartas : IsistemaDeckList
	+ Instalador()
	+ instalarSistema(): IsistemaDeckList
}

}
package services{
interface IsistemaDeckList{
IniciarSesion():
registrarse():
Salir():
}


Class sistemaDeckList implements IsistemaDeckList{
-Mazos: Mazo
-NOMBRE_ARCHIVO_TEXTO_TXT: String
-NOMBRE_ARCHIVO_TEXTO_TXT2: String

+SistemaDecklist()
-ConstruirMazo()
-verMisMazos()
-BuscarCarta()
-cerrarSesion()
}

listaMazos "1" <-- "1" sistemaDeckList: gestiona
instalador "1"---right--*"1" IsistemaDeckList:  instala
instalador "1"..* "1" sistemaDeckList: instancia
Mazo "1"--o "60..*" carta
listaMazos "1" --o "1..*" Mazo
}
@enduml